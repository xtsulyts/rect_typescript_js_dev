       
 
import { FaArrowRight, FaArrowLeft } from 'react-icons/fa';
import { useEffect, useState } from 'react';
 

 ### COMPONENTE ####
 
 
  const [currentProductIndex, setCurrentProductIndex] = useState(0);
  const [isHovered, setIsHovered] = useState(false);
  const [isAnimating, setIsAnimating] = useState(false);


  useEffect(() => {
    const interval = setInterval(() => {
      if (!isHovered && !isAnimating) {
        animateTransition();
      }
    }, 3000);

    return () => clearInterval(interval);
  },);

  const animateTransition = () => {
    setIsAnimating(true);
    setTimeout(() => {
      setCurrentProductIndex((prevIndex) => 
        prevIndex === products.length - 1 ? 0 : prevIndex + 1
      );
      setIsAnimating(false);
    }, 1000); // Duraci贸n de la animaci贸n
  };

  const nextProduct = () => {
    if (!isAnimating) animateTransition();
  };

  const prevProduct = () => {
    if (!isAnimating) {
      setIsAnimating(true);
      setTimeout(() => {
        setCurrentProductIndex((prevIndex) => 
          prevIndex === 0 ? products.length - 1 : prevIndex - 1
        );
        setIsAnimating(false);
      }, 1000);
    }
  };

       
       
       
        {/* Contenedor para la imagen animada */}
        <div 
          className="relative h-full w-full md:absolute md:right-0 md:top-0 md:h-full md:w-1/2"
          onMouseEnter={() => setIsHovered(true)}
          onMouseLeave={() => setIsHovered(false)}
        >
          {/* Imagen actual */}
          <div className={`
            absolute inset-0 md:left-0 md:right-auto md:w-48 md:h-48
            flex items-center justify-center
            transition-all duration-1000 ease-in-out
            ${isAnimating ? 
                'transform translate-x-[-50%] opacity-0' :  // Se detiene en el centro y desaparece
                'transform translate-x-full opacity-100'}  // Comienza completamente a la derecha
              
              // Y:
              'transform translate-x-full opacity-100' 
          `}>
            <img 
              src={products[currentProductIndex].image} 
              alt={products[currentProductIndex].name}
              className="h-full w-full object-cover rounded-lg shadow-xl"
            />
          </div>
          
          Imagen siguiente (para la transici贸n)
          {isAnimating && (
            <div className={`
              absolute inset-0 md:left-0 md:right-auto md:w-48 md:h-48
              flex items-center justify-center
              transition-all duration-1000 ease-in-out
              transform -translate-x-full opacity-100
            `}>
              <img 
                src={products[(currentProductIndex + 1) % products.length].image} 
                alt={products[(currentProductIndex + 1) % products.length].name}
                className="h-48 w-48 object-cover rounded-lg shadow-xl"
              />
            </div>
          )}
          
          {/* Controles de navegaci贸n */}
          <div className="absolute bottom-4 left-0 right-0 flex justify-center space-x-4">
            <button 
              onClick={prevProduct}
              className="bg-white bg-opacity-80 rounded-full p-2 text-blue-600 hover:bg-opacity-100"
            >
              <FaArrowLeft />
            </button>
            <button 
              onClick={nextProduct}
              className="bg-white bg-opacity-80 rounded-full p-2 text-blue-600 hover:bg-opacity-100"
            >
              <FaArrowRight />
            </button>
          </div>
          
          {/* Info del producto */}
          <div className="absolute bottom-0 left-1/2 transform -translate-x-1/2 bg-black bg-opacity-50 p-2 rounded-lg">
            <p className="text-sm font-semibold truncate">{products[currentProductIndex].name}</p>
            <p className="text-xs">${products[currentProductIndex].price.toFixed(2)}</p>
          </div>
        </div>